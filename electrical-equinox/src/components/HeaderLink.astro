---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>

<style>
  a {
    display: inline-block;
    font-size: 18px;
    font-weight: 600;
    text-decoration: none;
    padding: 10px 15px;
    border-radius: 6px;
    transition: all 0.3s ease-in-out;
    color: #00539F;
    position: relative;
    overflow: hidden;
  }

  /* ðŸ”¥ Animated Underline Effect */
  a::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: #6e45e2;
    bottom: 0;
    left: -100%;
    transition: left 0.3s ease-in-out;
  }

  a:hover::after {
    left: 0;
  }

  a.active {
    background: linear-gradient(135deg, #6e45e2, #88d3ce);
    color: white;
    box-shadow: 0px 4px 10px rgba(110, 69, 226, 0.3);
    font-weight: bold;
    border: 2px solid transparent;
  }

  a:hover {
    transform: scale(1.05);
    box-shadow: 0px 6px 14px rgba(110, 69, 226, 0.5);
  }

  a:active {
    transform: scale(0.95);
    box-shadow: 0px 2px 6px rgba(110, 69, 226, 0.2);
  }
</style>
